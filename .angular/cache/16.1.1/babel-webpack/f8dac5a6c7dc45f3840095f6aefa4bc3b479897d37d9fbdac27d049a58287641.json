{"ast":null,"code":"import { ModalMComponent } from '../modal-m/modal-m.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nfunction MedicosComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MedicosComponent_tr_18_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const medico_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openEditModal(medico_r1));\n    });\n    i0.ɵɵtext(8, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MedicosComponent_tr_18_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const medico_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteMedico(medico_r1));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medico_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(medico_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medico_r1.especialidad);\n  }\n}\nexport class MedicosComponent {\n  //creamos un constructor\n  //private dialog: MatDialog\n  constructor(http, dialog) {\n    this.http = http;\n    this.dialog = dialog;\n    // Propiedad para almacenar los datos de las personas\n    this.Medicos = [];\n  }\n  //con el OnInit hacemos el get de la api\n  ngOnInit() {\n    this.http.get('http://127.0.0.1:8000/api/medicos').subscribe(data => {\n      this.Medicos = data.data;\n      console.log(data);\n    });\n  }\n  //Creamos la funcion crear \n  openCreateModal() {\n    const dialogRef = this.dialog.open(ModalMComponent, {\n      data: {\n        action: 'create'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // Se ha guardado una nueva persona, realiza las acciones necesarias, como enviar una solicitud HTTP para guardarla en el servidor\n        const nuevoMedico = {\n          //nombres de la base de datos\n          nombre: result.nombre,\n          especialidad: result.especialidad\n        };\n        // Envía la solicitud HTTP para guardar la nueva persona\n        this.http.post('http://127.0.0.1:8000/api/medicos/create', nuevoMedico).subscribe(response => {\n          // Actualiza la lista de personas con la respuesta del servidor\n          this.Medicos.push(response.data);\n        });\n      }\n    });\n  }\n  //creamos la funcion para abrir el modal\n  openEditModal(medico) {\n    const dialogRef = this.dialog.open(ModalMComponent, {\n      data: {\n        action: 'edit',\n        nombre: medico.nombre,\n        especialidad: medico.especialidad\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // Se ha guardado la edición de la persona, realiza las acciones necesarias, como enviar una solicitud HTTP para actualizarla en el servidor\n        const medicoEditado = {\n          //nombres de la base de datos\n          nombre: result.nombre,\n          especialidad: result.especialidad\n        };\n        // Envía la solicitud HTTP para actualizar la persona en la ruta correspondiente (por ejemplo, 'http://127.0.0.1:8000/api/v1.0/persona/123')\n        this.http.put(`http://127.0.0.1:8000/api/medicos/update/${medico.id}`, medicoEditado).subscribe(response => {\n          // Actualiza la lista de personas con la respuesta del servidor\n          const medicosActualizados = response.data;\n          const index = this.Medicos.findIndex(p => p.id === medicosActualizados.id);\n          if (index !== -1) {\n            this.Medicos[index] = medicosActualizados;\n          }\n        });\n      }\n    });\n  }\n  //creamos la funcion para eliminar la persona\n  deleteMedico(medico) {\n    this.http.delete(`http://127.0.0.1:8000/api/medico/delete/${medico.id}`).subscribe(() => {\n      // Elimina la persona de la lista local\n      this.Medicos = this.Medicos.filter(p => p.id !== medico.id);\n    });\n  }\n}\nMedicosComponent.ɵfac = function MedicosComponent_Factory(t) {\n  return new (t || MedicosComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nMedicosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MedicosComponent,\n  selectors: [[\"app-medicos\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"containerMedico\"], [1, \"containerMedico__sub\"], [1, \"containerMedico__sub--title\"], [3, \"click\"], [1, \"containerMedico__sub--table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function MedicosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n      i0.ɵɵtext(4, \"Medicos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MedicosComponent_Template_button_click_5_listener() {\n        return ctx.openCreateModal();\n      });\n      i0.ɵɵtext(6, \"Crear\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"table\")(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Medico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Especialidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, MedicosComponent_tr_18_Template, 11, 2, \"tr\", 5);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.medicos);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ModalMComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","MedicosComponent_tr_18_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r3","medico_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","openEditModal","MedicosComponent_tr_18_Template_button_click_9_listener","ctx_r4","deleteMedico","ɵɵadvance","ɵɵtextInterpolate","nombre","especialidad","MedicosComponent","constructor","http","dialog","Medicos","ngOnInit","get","subscribe","data","console","log","openCreateModal","dialogRef","open","action","afterClosed","result","nuevoMedico","post","response","push","medico","medicoEditado","put","id","medicosActualizados","index","findIndex","p","delete","filter","ɵɵdirectiveInject","i1","HttpClient","i2","MatDialog","selectors","decls","vars","consts","template","MedicosComponent_Template","rf","ctx","MedicosComponent_Template_button_click_5_listener","ɵɵtemplate","MedicosComponent_tr_18_Template","ɵɵproperty","medicos"],"sources":["C:\\Users\\charl\\Documents\\GitHub\\hospital_client\\src\\app\\medicos\\medicos.component.ts","C:\\Users\\charl\\Documents\\GitHub\\hospital_client\\src\\app\\medicos\\medicos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalMComponent } from '../modal-m/modal-m.component';\r\n\r\n\r\nexport interface Medico {\r\n  id?: string;\r\n  nombre: string;\r\n  especialidad: string;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-medicos',\r\n  templateUrl: './medicos.component.html',\r\n  styleUrls: ['./medicos.component.scss']\r\n})\r\n\r\nexport class MedicosComponent implements OnInit {\r\n  // Propiedad para almacenar los datos de las personas\r\n  Medicos: any[] = [];\r\n\r\n  //creamos un constructor\r\n  //private dialog: MatDialog\r\n  constructor(private http: HttpClient, private dialog: MatDialog) {}\r\n\r\n  //con el OnInit hacemos el get de la api\r\n  ngOnInit() {\r\n    this.http\r\n      .get('http://127.0.0.1:8000/api/medicos')\r\n      .subscribe((data: any) => {\r\n        this.Medicos = data.data;\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  //Creamos la funcion crear \r\n  openCreateModal() {\r\n    const dialogRef = this.dialog.open(ModalMComponent, {\r\n      data: { action: 'create' },\r\n    });\r\n  \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // Se ha guardado una nueva persona, realiza las acciones necesarias, como enviar una solicitud HTTP para guardarla en el servidor\r\n        const nuevoMedico: Medico = {\r\n          //nombres de la base de datos\r\n          nombre: result.nombre,\r\n          especialidad: result.especialidad,\r\n          \r\n\r\n        };\r\n  \r\n        // Envía la solicitud HTTP para guardar la nueva persona\r\n        this.http.post('http://127.0.0.1:8000/api/medicos/create', nuevoMedico)\r\n          .subscribe((response: any) => {\r\n            // Actualiza la lista de personas con la respuesta del servidor\r\n            this.Medicos.push(response.data);\r\n          });\r\n      }\r\n    });\r\n  }\r\n  \r\n  \r\n  //creamos la funcion para abrir el modal\r\n  openEditModal(medico: Medico) {\r\n    const dialogRef = this.dialog.open(ModalMComponent, {\r\n      data: {\r\n        action: 'edit',\r\n        nombre: medico.nombre,\r\n        especialidad: medico.especialidad,\r\n      \r\n      },\r\n    });\r\n  \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // Se ha guardado la edición de la persona, realiza las acciones necesarias, como enviar una solicitud HTTP para actualizarla en el servidor\r\n        const medicoEditado: Medico = {\r\n          //nombres de la base de datos\r\n          nombre: result.nombre,\r\n          especialidad: result.especialidad,\r\n        };\r\n  \r\n        // Envía la solicitud HTTP para actualizar la persona en la ruta correspondiente (por ejemplo, 'http://127.0.0.1:8000/api/v1.0/persona/123')\r\n        this.http.put(`http://127.0.0.1:8000/api/medicos/update/${medico.id}`, medicoEditado)\r\n          .subscribe((response: any) => {\r\n            // Actualiza la lista de personas con la respuesta del servidor\r\n            const medicosActualizados = response.data;\r\n            const index = this.Medicos.findIndex(p => p.id === medicosActualizados.id);\r\n            if (index !== -1) {\r\n              this.Medicos[index] = medicosActualizados;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  //creamos la funcion para eliminar la persona\r\n  deleteMedico(medico: Medico) {\r\n    this.http.delete(`http://127.0.0.1:8000/api/medico/delete/${medico.id}`)\r\n      .subscribe(() => {\r\n        // Elimina la persona de la lista local\r\n        this.Medicos = this.Medicos.filter(p => p.id !== medico.id);\r\n      });\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n\r\n\r\n","<!-- usamos la metodologia bem para usar scss -->\r\n<div class=\"containerMedico\">\r\n    <div class=\"containerMedico__sub\">\r\n        <div class=\"containerMedico__sub--title\">\r\n            <h1>Medicos</h1>\r\n            <button (click)=\"openCreateModal()\">Crear</button>\r\n        </div>\r\n        <div class=\"containerMedico__sub--table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Medico</th>\r\n                        <th>Especialidad</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let medico of medicos\">\r\n                        <td><b>{{ medico.nombre }}</b></td>\r\n                        <td>{{ medico.especialidad }}</td>\r\n       \r\n                        <td>\r\n                            <button (click)=\"openEditModal(medico)\">Edit</button>\r\n                            <button (click)=\"deleteMedico(medico)\">Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}